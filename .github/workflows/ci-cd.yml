name: CI/CD Pipeline with OIDC

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Build Docker Image
        run: docker build -t myapp:${{ github.sha }} .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::YOUR_ACCOUNT_ID:role/YOUR_ROLE_NAME
          aws-region: ap-southeast-1

      - name: Push Docker Image to ECR
        run: |
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin YOUR_ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com
          docker tag myapp:${{ github.sha }} YOUR_ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com/myapp:${{ github.sha }}
          docker push YOUR_ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com/myapp:${{ github.sha }}

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment
